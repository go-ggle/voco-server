name: CD 

on:
  push:
    branches: [ develop ]

env:
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  
jobs:
  build:
    name: CD
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
        
      - name: Set application yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-dev.yml
        env:
          spring.datasource.url: ${{ secrets.DATABASE_URL }}
          spring.datasource.username: ${{ secrets.DATABASE_USERNAME }}
          spring.datasource.password: ${{ secrets.DATABASE_PASSWORD }}
          cloud.aws.s3.credentials.access-key: ${{ secrets.S3_ACCESS_KEY }}
          cloud.aws.s3.credentials.secret-key: ${{ secrets.S3_SECRET_KEY }}
          cloud.aws.region.static: ${{ secrets.AWS_REGION }}
          ai.address: ${{ secrets.AI_ADDRESS }}
          ai.port: ${{ secrets.AI_PORT }}
          ai.audio-bucket-name: ${{ secrets.AUDIO_BUCKET_NAME }}

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash
        
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy
      
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
        
      - name: Deploy
        run: |
          aws deploy create-deployment \
          --application-name ${{ secrets.CODEDEPLOY_APP }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ secrets.CODEDEPLOY_GROUP }} \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=$GITHUB_SHA.zip \
          --region ${{ secrets.AWS_REGION }} \
